'''
Created on 2018年1月13日

@author: Administrator
tf多特征非线性回归
https://www.2cto.com/kf/201704/626628.html
'''

import tensorflow as tf  
import numpy as np  
import matplotlib.pyplot as plt  
  
year_2014 = 0.1
year_2015 = 0.2
year_2016 = 0.3
year_2017 = 0.4
year_2018 = 0.5
# 特征数
featurenum = 4
x = tf.placeholder(tf.float32, [None, featurenum])  
y = tf.placeholder(tf.float32, [None, 1])  
  
#定义神经网络中间层权值  
weights_l1 = tf.placeholder(tf.float32, [featurenum, 10]) 
biases_l1 = tf.placeholder(tf.float32, [1, 10]) 
wx_plust_b_l1 = tf.matmul(x, weights_l1) + biases_l1  
# l1 = tf.nn.relu(wx_plust_b_l1)#双曲正切函数作为激活函数  
l1 = tf.nn.tanh(wx_plust_b_l1)#双曲正切函数作为激活函数  
# l1 = tf.sigmoid(wx_plust_b_l1)
  
#定义输出层  
weights_l2 = tf.placeholder(tf.float32, [ 10,1]) 
biases_l2 = tf.placeholder(tf.float32, [ 1,1]) 
wx_plust_b_l2 = tf.matmul(l1, weights_l2) + biases_l2  
# prediction = tf.nn.relu(wx_plust_b_l2)#预测结果  
prediction = tf.nn.tanh(wx_plust_b_l2)#预测结果  
# prediction = tf.sigmoid(wx_plust_b_l2)#预测结果  
  
#代价函数  
with tf.Session() as sess:  
    sess.run(tf.global_variables_initializer())#变量初始化，一定要做  
    x_data = [
#               [-0.16*5,year_2014,0.12582,0.13354],[-0.16*4,year_2014,0.12845,0.13115],
#           [-0.16*3,year_2014,0.11157,0.11281],[-0.16*2,year_2014,0.10621,0.10677],[-0.16*1,year_2014,0.10432,0.10466],
#           [0.16*1,year_2014,0.10363,0.10392],[0.16*2,year_2014,0.10425,0.10474],[0.16*3,year_2014,0.11104,0.11348],
#           [0.16*4,year_2014,0.13378,0.14019],[0.16*5,year_2014,0.18119,0.19272],[0.16*6,year_2014,0.22907,0.24303],
           
          [-0.16*6,year_2015,0.22875,0.23774],[-0.16*5,year_2015,0.11789,0.11910],[-0.16*4,year_2015,0.12477,0.12820],
          [-0.16*3,year_2015,0.14280,0.14806],[-0.16*2,year_2015,0.15508,0.16252],[-0.16*1,year_2015,0.16890,0.17658],
          [0.16*1,year_2015,0.18292,0.19115],[0.16*2,year_2015,0.19867,0.20520],[0.16*3,year_2015,0.19941,0.20397],
          [0.16*4,year_2015,0.16605,0.16883],[0.16*5,year_2015,0.15972,0.16275],[0.16*6,year_2015,0.16640,0.16952],
          
          [-0.16*6,year_2016,0.15151,0.15679],[-0.16*5,year_2016,0.15752,0.16554],[-0.16*4,year_2016,0.18508,0.19272],
          [-0.16*3,year_2016,0.19853,0.21006],[-0.16*2,year_2016,0.21182,0.22585],[-0.16*1,year_2016,0.32371,0.24690],
          [0.16*1,year_2016,0.25987,0.27367],[0.16*2,year_2016,0.28182,0.29401],[0.16*3,year_2016,0.28292,0.29100],
          [0.16*4,year_2016,0.22107,0.22590],[0.16*5,year_2016,0.22458,0.23236],[0.16*6,year_2016,0.23198,0.24061],
          
          [-0.16*6,year_2017,0.21902,0.23076],[-0.16*5,year_2017,0.24511,0.25761],[-0.16*4,year_2017,0.26545,0.28025],
          [-0.16*3,year_2017,0.27891,0.29496],[-0.16*2,year_2017,0.30306,0.32079],[-0.16*1,year_2017,0.31664,0.32712],
          [0.16*1,year_2017,0.15473,0.15936],[0.16*2,year_2017,0.16705,0.17397],[0.16*3,year_2017,0.18764,0.19823],
          [0.16*4,year_2017,0.19872,0.21006],[0.16*5,year_2017,0.20558,0.21532],[0.16*6,year_2017,0.20169,0.21244],
           
           [-0.16*6,year_2018,0.19169,0.20244]
#            ,[-0.16*5,year_2018,0.20169,0.21244],
#            [-0.16*4,year_2018,0.20169,0.21244],[-0.16*3,year_2018,0.20169,0.21244],
#            [-0.16*2,year_2018,0.20169,0.21244],[-0.16*1,year_2018,0.20169,0.21244],
#            [0.16*1,year_2018,0.20169,0.21244],[0.16*2,year_2018,0.20169,0.21244],
#            [0.16*3,year_2018,0.20169,0.21244],[0.16*4,year_2018,0.20169,0.21244],
#            [0.16*5,year_2018,0.20169,0.21244],[0.16*6,year_2018,0.20169,0.21244],
           
        ]
    
#     x_data = [[-0.16*6,year_2018,0.19169,0.20244]]
    
#     weights_ave_l1_p = [[1.1930967569351196, 1.345849871635437, 0.1688433587551117, -1.2398706674575806, -0.15672701597213745, 0.35312557220458984, 0.13777822256088257, -0.44106966257095337, -1.684596061706543, -1.6747640371322632], [1.461923360824585, -0.032587017863988876, -0.8609980940818787, 0.7977507710456848, -0.12067732959985733, -0.32153671979904175, 1.2861346006393433, -0.8438249230384827, 0.6662368774414062, 0.11437363177537918], [1.1179627180099487, 0.42832711338996887, -0.10007894784212112, -0.8855685591697693, 0.015994971618056297, -0.3433641195297241, 1.7629085779190063, 0.13890565931797028, -0.8009293079376221, 0.04005688056349754], [-0.5183324813842773, 0.711624026298523, -0.13716986775398254, 1.809028148651123, 1.0168349742889404, -0.7511729001998901, 1.8111592531204224, 0.02500736713409424, 1.4298113584518433, -0.12942537665367126]]
#     biases_ave_l1_p = [[-0.1250334233045578, -0.07681452482938766, 0.006027404684573412, -0.1250154674053192, -0.06068744137883186, -0.11531034111976624, -0.1146354228258133, 0.21325820684432983, -0.27214932441711426, -0.06889268010854721]]
#     weights_ave_l2_p = [[-0.1624373346567154], [0.5273829698562622], [0.10212774574756622], [0.5869656205177307], [0.7582919001579285], [0.49445903301239014], [0.34630435705184937], [-0.483193039894104], [-0.8450377583503723], [0.9533731341362]]
#     biases_ave_l2_p = [[0.08007363229990005]]
    #学习率0.01
    weights_ave_l1_p = [[-0.3523813486099243, -0.5128801465034485, 0.9119041562080383, -0.5959456562995911, -0.10076430439949036, -0.1541043370962143, 1.08709716796875, 0.583561360836029, -1.0553529262542725, 0.11139828711748123], [-0.33767297863960266, 0.5989884734153748, 1.8842629194259644, -0.35462093353271484, -0.44008901715278625, -2.249861240386963, 0.3517175316810608, -0.38756293058395386, 0.29336366057395935, 0.901299238204956], [0.003797374200075865, -0.41963887214660645, -0.13713467121124268, -0.6673170328140259, -0.7061980366706848, -1.995251178741455, -0.5529693961143494, -0.590857982635498, -0.09434973448514938, -0.33933988213539124], [1.1345956325531006, -1.3125791549682617, -1.6855332851409912, -0.3203333616256714, 0.8589867949485779, 0.9690197706222534, 0.10226050764322281, 0.6637375950813293, -0.5754485726356506, 1.0022584199905396]]
    biases_ave_l1_p = [[0.015822535380721092, -0.12597958743572235, 0.24822919070720673, -0.11498789489269257, -0.05741577595472336, 0.15709805488586426, 0.012509397231042385, -0.008813004940748215, 0.20237725973129272, -0.0005576940020546317]]
    weights_ave_l2_p = [[-1.050148844718933], [-1.7418129444122314], [-0.5721732378005981], [1.0568889379501343], [1.318968415260315], [-0.9764222502708435], [1.0505770444869995], [-0.8132564425468445], [0.8195973634719849], [-0.012918890453875065]]
    biases_ave_l2_p = [[-0.045491643249988556]]

#     weights_ave_l1_p = [[0.44140294194221497, -0.24035029113292694, 1.0251338481903076, 0.9479011297225952, 1.7468780279159546, -1.8709547519683838, -0.2179981768131256, -0.8169164657592773, -1.2041449546813965, 0.702321469783783], [-0.2293279618024826, -0.6179852485656738, 0.46956542134284973, -0.958539605140686, -0.8985744714736938, -0.8628761768341064, -0.9183302521705627, 0.9263491034507751, 0.8470969200134277, -0.23447121679782867], [-1.2615416049957275, -0.2526593506336212, -0.050545863807201385, 0.5315046906471252, -0.6763074994087219, 0.048339731991291046, 0.8578909039497375, 1.2335683107376099, -0.44472596049308777, 0.5606920719146729], [0.3387419283390045, -1.074143648147583, -1.5286122560501099, -3.036823272705078, 1.5683215856552124, 0.1980086714029312, 0.0031203487887978554, 1.2663962841033936, -0.27389776706695557, -0.7409819960594177]]
#     biases_ave_l1_p = [[-0.012322182767093182, -0.06241147592663765, -0.06838606297969818, -0.1268528699874878, 0.07015728205442429, 0.1623532772064209, -0.0007769964286126196, -0.19840829074382782, 0.14363422989845276, 0.006167410407215357]]
#     weights_ave_l2_p = [[0.5974646806716919], [-0.8852148056030273], [0.7881800532341003], [0.5130707621574402], [0.6240262985229492], [0.46463996171951294], [0.840590238571167], [0.9637265801429749], [0.648945689201355], [-0.23249125480651855]]
#     biases_ave_l2_p = [[0.009418074041604996]]
    prediction_ave = sess.run(prediction, feed_dict={x:x_data,weights_l1:weights_ave_l1_p,biases_l1:biases_ave_l1_p,weights_l2:weights_ave_l2_p,biases_l2:biases_ave_l2_p})
    print('预测ave：',prediction_ave)
    
    #0.0003
#     weights_min_l1_p = [[-1.339483380317688, -1.355974793434143, 0.6034545302391052, -0.2260138988494873, 4.832806587219238, 3.463193655014038, 1.9263279438018799, -1.4933710098266602, 0.3057897984981537, 1.0234559774398804], [-1.3344073295593262, -1.9993972778320312, 1.6616140604019165, -0.6256783604621887, -1.267066478729248, 0.3360605537891388, -0.4854280352592468, -0.6398382186889648, -0.026126841083168983, 0.2184191793203354], [1.3160693645477295, 0.47240185737609863, 1.8714228868484497, -0.48657211661338806, 0.2608347237110138, -0.26793649792671204, 0.37159448862075806, -2.2501654624938965, 0.13335248827934265, 0.08263584971427917], [0.07747701555490494, -0.1959555596113205, 1.3231706619262695, -0.5894787907600403, 0.44979771971702576, 0.9399721622467041, 1.26207435131073, -2.3409230709075928, -1.797001600265503, 1.319226861000061]]
#     biases_min_l1_p = [[-0.04539652168750763, 0.21084029972553253, -0.6912815570831299, 0.21879415214061737, 0.3725215494632721, -0.008928299881517887, 0.3438907861709595, -0.026295047253370285, -0.03651648387312889, -0.045518167316913605]]
#     weights_min_l2_p = [[-0.3136899769306183], [-0.12295748293399811], [1.444143295288086], [1.6564931869506836], [1.2699512243270874], [-2.1161739826202393], [1.0611025094985962], [0.5993022322654724], [-0.11642235517501831], [-0.5251060128211975]]
#     biases_min_l2_p = [[0.20707330107688904]]
    #0.0002
#     weights_min_l1_p = [[1.27183198928833, 3.0693182945251465, -0.6358974575996399, -0.9072331190109253, 2.9076883792877197, -0.21578864753246307, 3.511378049850464, -0.2756432890892029, 1.4665104150772095, -1.2269799709320068], [0.49664250016212463, -0.7448461651802063, -0.8598025441169739, 0.6425030827522278, 2.3861653804779053, 0.5807811617851257, -0.5905580520629883, -0.7105848789215088, 1.939922571182251, 0.276032418012619], [0.4585312008857727, -0.6794642806053162, -0.770612895488739, -1.371117115020752, 0.0687539279460907, 1.8127490282058716, 0.19754451513290405, -0.34013885259628296, 0.9478228092193604, 0.10945384204387665], [-3.256270408630371, -2.0446321964263916, 0.6445654034614563, -1.203013300895691, -1.710784912109375, 1.889350414276123, -0.9659835696220398, -0.15377233922481537, 0.6806579232215881, -2.1010937690734863]]
#     biases_min_l1_p = [[0.3230176270008087, 0.2139192521572113, 0.1302373707294464, -0.24821531772613525, -0.024539057165384293, -0.17383234202861786, 0.1551763415336609, 0.20181012153625488, -0.4354129731655121, 0.15073929727077484]]
#     weights_min_l2_p = [[1.5964295864105225], [-1.0780861377716064], [0.9263099431991577], [0.9019443392753601], [-1.5655627250671387], [1.1775072813034058], [1.2859954833984375], [0.9944770932197571], [1.347442626953125], [-0.39770153164863586]]
#     biases_min_l2_p = [[-0.15879856050014496]]
    
    weights_min_l1_p = [[-0.10623910278081894, -0.23068375885486603, -1.373522162437439, -0.30261674523353577, 0.8897795081138611, 0.6795448660850525, 0.26200151443481445, -1.5259696245193481, -2.1872470378875732, -1.000166893005371], [-1.3397514820098877, 1.1930632591247559, -0.24940980970859528, 0.9023411870002747, 0.39479655027389526, 0.1061934381723404, 0.13952860236167908, -0.3050040602684021, 1.2787795066833496, 0.550739586353302], [-0.1786477118730545, 0.9040347933769226, -0.5427271127700806, 0.8622395396232605, -0.2636965811252594, 0.2389526218175888, 0.3518978953361511, 1.2801039218902588, 0.2275128960609436, -2.0473756790161133], [0.5704302787780762, 2.450829267501831, -0.026381339877843857, -0.5994762182235718, -2.023341417312622, 0.3616867959499359, 0.5327883362770081, 1.0136783123016357, 2.1945724487304688, -1.7865082025527954]]
    biases_min_l1_p = [[0.11231459677219391, -0.2907104790210724, -0.17972415685653687, -0.04490053653717041, 0.003942349459975958, -0.3041607737541199, -0.030784068629145622, 0.16219474375247955, -0.06466302275657654, 0.20957298576831818]]
    weights_min_l2_p = [[1.1266911029815674], [1.3307608366012573], [0.6721860766410828], [-0.3683406710624695], [0.6240770816802979], [-1.4989283084869385], [-0.48885032534599304], [-1.5815740823745728], [0.8610703349113464], [-1.0257468223571777]]
    biases_min_l2_p = [[-0.1471598893404007]]
    prediction_min = sess.run(prediction, feed_dict={x:x_data,weights_l1:weights_min_l1_p,biases_l1:biases_min_l1_p,weights_l2:weights_min_l2_p,biases_l2:biases_min_l2_p})
    print('预测min：',prediction_min)
    
    #画图  
    seed_plt = 0.040
    x_plt = [[-seed_plt*23],[-seed_plt*22],[-seed_plt*21],[-seed_plt*20],[-seed_plt*19],[-seed_plt*18],[-seed_plt*17],[-seed_plt*16],[-seed_plt*15],[-seed_plt*14],[-seed_plt*13],[-seed_plt*12],
             [-seed_plt*11],[-seed_plt*10],[-seed_plt*9],[-seed_plt*8],[-seed_plt*7],[-seed_plt*6],[-seed_plt*5],[-seed_plt*4],[-seed_plt*3],[-seed_plt*2],[-seed_plt*1],
             [seed_plt*1],[seed_plt*2],[seed_plt*3],[seed_plt*4],[seed_plt*5],[seed_plt*6],[seed_plt*7],[seed_plt*8],[seed_plt*9],[seed_plt*10],[seed_plt*11],[seed_plt*12],[seed_plt*13],[seed_plt*14],
#               [seed_plt*15],[seed_plt*16]#,[seed_plt*17],[seed_plt*18],[seed_plt*19],[seed_plt*20],[seed_plt*21],[seed_plt*22],[seed_plt*23],[seed_plt*24],[seed_plt*25]
             ]
    plt.figure()  
    plt.plot(x_plt, prediction_ave, 'r-', lw = 5)#画预测的实线，红色  
    plt.plot(x_plt, prediction_min, 'b-', lw = 5)#画预测的实线，红色  
    plt.show()
    
